apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  labels:
    intent: apps
    provisioner/type: karpenter
    provisioner/name: default
    eks-cluster: ${EKS_CLUSTER_NAME}
  requirements:
    - key: karpenter.sh/capacity-type
      operator: In
      values: [ "on-demand" ]
    - key: karpenter.k8s.aws/instance-category
      operator: In
      values: [ c, m, r ]
    - key: karpenter.k8s.aws/instance-generation
      operator: In
      values: [ '5', '6' ]
#    - key: karpenter.k8s.aws/instance-size
#      operator: NotIn
#      values: [ nano, micro, small ] # , medium, large
  limits:
    resources:
      cpu: 3000
      memory: 10000Gi
  ttlSecondsUntilExpired: 2592000
  ttlSecondsAfterEmpty: 20
  providerRef:
    name: default
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: default
spec:
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 40Gi
        volumeType: gp3
  subnetSelector:
    alpha.eksctl.io/cluster-name: ${EKS_CLUSTER_NAME}
  securityGroupSelector:
    alpha.eksctl.io/cluster-name: ${EKS_CLUSTER_NAME}
  tags:
    intent: apps
    provisioner/type: karpenter
    provisioner/name: default
    eks-cluster: ${EKS_CLUSTER_NAME}